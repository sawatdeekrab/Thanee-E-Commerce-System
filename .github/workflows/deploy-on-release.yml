name: Deploy Angular App to GitHub Pages

on:
  release:
    type: [created]
  # Allows you to run this workflow manually from the Actions tab in your repository.
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }} # Or a fixed string like 'deploy-pages'
  cancel-in-progress: true # Optional: cancels any currently running workflow in this group

permissions:
  contents: read
  deployments: write
  pages: write
  id-token: write

jobs:
  build:
    if: ${{ github.event.release.target_commitish == 'Production'}}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22' # Ensure this matches your project's Node.js requirement

      - name: Cache Node.js modules
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Build Angular application
        # --configuration=production optimizes the build for deployment.
        # --base-href=/Thanee-E-Commerce-System/ is CRUCIAL for GitHub Pages deployments
        # as it tells Angular where to find its assets relative to the root URL.
        # This matches your repository name: 'Thanee-E-Commerce-System'.
        run: npm run build --configuration=production

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        # This path points to where Angular places the compiled static files.
        # For default Angular CLI projects, it's typically 'dist/your-project-name'.
        # In your case, after running 'npm run build', you should see a folder
        # like 'dist/than-e-commerce-system' (lowercase, hyphenated from your project name).
        # Please verify the exact folder name under your 'dist' directory after a local build.
        with:
          path: ./dist/thanee-e-com-sys/browser # <--- VERIFY THIS PATH!

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
